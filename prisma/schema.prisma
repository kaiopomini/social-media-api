// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  hash      String
  hashedRT  String?
  posts     Post[]
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id     String @id @default(uuid())
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.Uuid

  @@map("Profiles")
}

model Post {
  id        String         @id @default(uuid()) @db.Uuid
  parentId  String?        @db.Uuid
  content   String
  owner     User           @relation(fields: [ownerId], references: [id])
  ownerId   String         @db.Uuid
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  responses PostResponse[] @relation("RepliesTo")
  Likes     Like[]

  @@index([ownerId])
  @@map("Posts")
}

model PostResponse {
  id        String   @id @default(uuid()) @db.Uuid
  content   String
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  parentId  String   @db.Uuid
  parent    Post     @relation("RepliesTo", fields: [parentId], references: [id])
  likes     Like[]

  @@index([parentId])
  @@map("PostResponses")
}

model Like {
  id             String        @id @default(uuid()) @db.Uuid
  userId         String        @db.Uuid
  createdAt      DateTime      @default(now())
  PostResponse   PostResponse? @relation(fields: [postResponseId], references: [id])
  postResponseId String?       @db.Uuid
  Post           Post?         @relation(fields: [postId], references: [id])
  postId         String?       @db.Uuid

  @@index([postId])
  @@index([postResponseId])
  @@map("Likes")
}
